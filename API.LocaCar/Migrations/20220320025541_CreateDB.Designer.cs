// <auto-generated />
using API.LocaCar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.LocaCar.Migrations
{
    [DbContext(typeof(LocaCarDbContext))]
    [Migration("20220320025541_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("API.LocaCar.Entities.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgenciaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Logradouro")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Agencia", b =>
                {
                    b.HasOne("API.LocaCar.Entities.Endereco", "Endereco")
                        .WithOne("Agencia")
                        .HasForeignKey("API.LocaCar.Entities.Agencia", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Carro", b =>
                {
                    b.HasOne("API.LocaCar.Entities.Agencia", "Agencia")
                        .WithMany("Carros")
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agencia");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Agencia", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("API.LocaCar.Entities.Endereco", b =>
                {
                    b.Navigation("Agencia");
                });
#pragma warning restore 612, 618
        }
    }
}
